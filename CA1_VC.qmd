---
title: "CA1_VC"
author: 
  - name: Vinny Chloros
    email: vinny.chloros@snhu.edu
    affiliations: 
      - name: Southern New Hampshire University
format: html
editor: visual
date: 2/4/2025
date-modified: today
date-format: long
theme: superhero
code-fold: true
---

```{r setup}
#| message: false

library(tidyverse)
library(tidymodels)
library(kableExtra)
library(patchwork)

zillow_data <- read_csv("data.csv")

```

## Statement of Purpose

With the ongoing housing crisis within the United States, identifying homes that land within the budget of families looking to buy can be a small help in the larger economic problem. Here, I'll aim to identify the features of homes that best predicts where they land on a range of prices. I'll be using a data set derived from zillow centered on Austin, TX and a few nearby cities as a microcosm of the larger housing market.

## Setup

```{r split}
set.seed(0409)
zillow_splits <- initial_split(zillow_data, 0.85, strata = priceRange)

train <- training(zillow_splits)
test <- testing(zillow_splits)

train |>
  head() |>
  kbl() |>
  kable_styling(bootstrap_options = "striped") |>
  scroll_box(height = "300px")
  
```



## Exploratory Data Analysis (EDA)

Since the value of focus is the price range of each observation, let's take a look at how prices are distributed across the data set:

```{r price}
train |>
  ggplot() +
  geom_bar(aes(x = priceRange)) +
  labs(title = "Distribution of Price Range",
       x = "Price Range",
       y = "Count")

train |>
  count(priceRange) |>
  kbl() |>
  kable_styling(bootstrap_options = "striped")
```

### Categorical Variables

```{r categories}
city_plot <- train |>
  ggplot() +
  geom_bar(aes(y = city)) +
  labs(
    title = "City",
    x = "",
    y = "Count"
  )

type_plot <- train |>
  ggplot() +
  geom_bar(aes(y = homeType)) +
  labs(
    title = "Home Type",
    x = "",
    y = "Count"
  )

spa_plot <- train |>
  ggplot() +
  geom_bar(aes(x = hasSpa)) +
  labs(
    title = "House Has Spa?",
    x = "",
    y = "Count"
  )

garage_plot <- train |>
  ggplot() +
  geom_bar(aes(x = garageSpaces)) +
  labs(
    title = "Number of Garage Spaces",
    x = "",
    y = "Count"
  )

patio_plot <- train |>
  ggplot() +
  geom_bar(aes(x = numOfPatioAndPorchFeatures)) +
  labs(
    title = "Number of Patio and Porch Features",
    x = "",
    y = "Count"
  )

bathroom_plot <- train |>
  ggplot() +
  geom_bar(aes(x = numOfBathrooms)) +
  labs(
    title = "Number of Bathrooms",
    x = "",
    y = "Count"
  )

bedroom_plot <- train |>
  ggplot() +
  geom_bar(aes(x = numOfBedrooms)) +
  labs(
    title = "Number of Bedrooms",
    x = "",
    y = "Count"
  )

student_plot <- train |>
  ggplot() +
  geom_bar(aes(x = MedianStudentsPerTeacher)) +
  labs(
    title = "Median Students Per Teacher",
    x = "",
    y = "Count"
  )

(city_plot +
type_plot)
spa_plot 
(garage_plot +
patio_plot) 
(bathroom_plot +
bedroom_plot) 
student_plot
```

### Numerical Variables

```{r nums}
#| message: false

year_plot <- train |>
  ggplot() +
  geom_histogram(aes(x = yearBuilt)) +
  geom_boxplot(aes(x = yearBuilt, y = -40), width = 40) +
  labs(
    title = "Year Built",
    x = "",
    y = "Count"
  )

school_plot <- train |>
  ggplot() +
  geom_histogram(aes(x = avgSchoolRating)) +
  geom_boxplot(aes(x = avgSchoolRating, y = -40), width = 40) +
  labs(
    title = "Average School Rating",
    x = "",
    y = "Count"
  )

lot_plot <- train |>
  ggplot() +
  geom_histogram(aes(x = lotSizeSqFt)) +
  geom_boxplot(aes(x = lotSizeSqFt, y = -40), width = 40) +
  scale_x_log10() +
  labs(
    title = "Lot Size (sq ft)",
    x = "",
    y = "Count"
  )


year_plot 
school_plot 
lot_plot
```


### Multiple Variables

```{r}
city_price <- train |>
  ggplot() +
  geom_bar(aes(y = city, fill = priceRange), position = "fill") +
  labs(title = "City and Price Range",
       y = "City",
       x = "Count")

type_price <- train |>
  ggplot() +
  geom_bar(aes(y = homeType, fill = priceRange), position = "fill") +
  labs(title = "Home Type and Price Range",
       y = "Home Type",
       x = "Count") +
  theme(legend.position = "none")


spa_price <- train |>
  ggplot() +
  geom_bar(aes(x = hasSpa, fill = priceRange)) +
  labs(title = "Spa Prescence and Price Range",
       x = "Has Spa?",
       y = "Count") +
  theme(legend.position = "none")

garage_price <- train |>
  ggplot() +
  geom_bar(aes(x = garageSpaces, fill = priceRange)) +
  labs(title = "Garage Spaces and Price Range",
       x = "Number of Garage Spaces",
       y = "Count") +
  theme(legend.position = "none")

patio_price <- train |>
  ggplot() +
  geom_bar(aes(x = numOfPatioAndPorchFeatures, fill = priceRange)) +
  labs(title = "Patio & Porch Features and Price Range",
       x = "# of Patio & Porch Features",
       y = "Count") +
  theme(legend.position = "none")

bath_price <- train |>
  ggplot() +
  geom_bar(aes(x = numOfBathrooms, fill = priceRange)) +
  labs(title = "Bathrooms and Price Range",
       x = "Number of Bathrooms",
       y = "Count") +
  theme(legend.position = "none")

bed_price <- train |>
  ggplot() +
  geom_bar(aes(x = numOfBedrooms, fill = priceRange)) +
  labs(title = "Bedrooms and Price Range",
       x = "Number of Bedrooms",
       y = "Count")

students_price <- train |>
  ggplot() +
  geom_bar(aes(x = MedianStudentsPerTeacher, fill = priceRange)) +
  labs(title = "Median Students per Teacher and Price Range",
       x = "Number of Students",
       y = "Count") +
  theme(legend.position = "none")


(city_price +
type_price)
spa_price
garage_price
patio_price
(bath_price +
bed_price)
students_price
```



```{r}

```

